        -:    0:Source:/home/krillin/code/nsu/23203_knyazkov/lab1/test/src/methods_tests.cc
        -:    1:#include "../../src/methods.cpp"
        -:    2:#include <gtest/gtest.h>
        -:    3:#include <gtest/gtest_prod.h>
        -:    4:#include <string>
        -:    5:
        4:    6:TEST(methods_tests, insert_test_1) {
        1:    7:  HashTable a = HashTable();
        1:    8:  Value value = {1, 1};
        1:    9:  const Key key = "Key";
        1:   10:  a.insert(key, value);
       1*:   11:  ASSERT_TRUE(value == a[key]);
        1:   12:}
------------------
_ZN32methods_tests_insert_test_1_TestC2Ev:
function _ZN32methods_tests_insert_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:    6:TEST(methods_tests, insert_test_1) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_1_TestD0Ev:
function _ZN32methods_tests_insert_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:    6:TEST(methods_tests, insert_test_1) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN32methods_tests_insert_test_1_TestD2Ev:
function _ZN32methods_tests_insert_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:    6:TEST(methods_tests, insert_test_1) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_1_Test8TestBodyEv:
function _ZN32methods_tests_insert_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 44%
        1:    6:TEST(methods_tests, insert_test_1) {
        1:    7:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:    8:  Value value = {1, 1};
        1:    9:  const Key key = "Key";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   10:  a.insert(key, value);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       1*:   11:  ASSERT_TRUE(value == a[key]);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
branch  6 taken 0% (fallthrough)
branch  7 taken 100%
call    8 never executed
branch  9 never executed (fallthrough)
branch 10 never executed (throw)
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
call   22 never executed
call   23 never executed
call   24 returned 100%
branch 25 taken 100% (fallthrough)
branch 26 taken 0%
call   27 never executed
call   28 never executed
call   29 never executed
call   30 never executed
        1:   12:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
call    6 never executed
call    7 never executed
------------------
        -:   13:
        4:   14:TEST(methods_tests, insert_test_2) {
        1:   15:  HashTable a = HashTable();
        1:   16:  Value value = {1, 1};
        1:   17:  const Key key = "Key";
        1:   18:  a.insert(key, value);
        -:   19:
       1*:   20:  EXPECT_EQ(1, a.getSize()) << "Size hasn't been updated!!\n";
        1:   21:}
------------------
_ZN32methods_tests_insert_test_2_TestC2Ev:
function _ZN32methods_tests_insert_test_2_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   14:TEST(methods_tests, insert_test_2) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_2_TestD0Ev:
function _ZN32methods_tests_insert_test_2_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   14:TEST(methods_tests, insert_test_2) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN32methods_tests_insert_test_2_TestD2Ev:
function _ZN32methods_tests_insert_test_2_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   14:TEST(methods_tests, insert_test_2) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_2_Test8TestBodyEv:
function _ZN32methods_tests_insert_test_2_Test8TestBodyEv called 1 returned 100% blocks executed 37%
        1:   14:TEST(methods_tests, insert_test_2) {
        1:   15:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   16:  Value value = {1, 1};
        1:   17:  const Key key = "Key";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   18:  a.insert(key, value);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   19:
       1*:   20:  EXPECT_EQ(1, a.getSize()) << "Size hasn't been updated!!\n";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
call   20 never executed
call   21 never executed
call   22 returned 100%
call   23 never executed
call   24 never executed
call   25 never executed
        1:   21:}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 never executed
------------------
        -:   22:
        4:   23:TEST(methods_tests, insert_test_3) {
        1:   24:  HashTable a = HashTable();
        2:   25:  HashNode node = HashNode("Key", {2, 2});
        1:   26:  a.insert(node.key, node.value);
       3*:   27:  EXPECT_TRUE(a.find("Key") != -1) << "\"Key\" wasn't found!!\n";
        1:   28:}
------------------
_ZN32methods_tests_insert_test_3_TestC2Ev:
function _ZN32methods_tests_insert_test_3_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   23:TEST(methods_tests, insert_test_3) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_3_TestD0Ev:
function _ZN32methods_tests_insert_test_3_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   23:TEST(methods_tests, insert_test_3) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN32methods_tests_insert_test_3_TestD2Ev:
function _ZN32methods_tests_insert_test_3_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   23:TEST(methods_tests, insert_test_3) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_3_Test8TestBodyEv:
function _ZN32methods_tests_insert_test_3_Test8TestBodyEv called 1 returned 100% blocks executed 37%
        1:   23:TEST(methods_tests, insert_test_3) {
        1:   24:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:   25:  HashNode node = HashNode("Key", {2, 2});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        1:   26:  a.insert(node.key, node.value);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       3*:   27:  EXPECT_TRUE(a.find("Key") != -1) << "\"Key\" wasn't found!!\n";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 never executed
branch 10 never executed (fallthrough)
branch 11 never executed (throw)
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
call   18 never executed
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
        1:   28:}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 never executed
------------------
        -:   29:
        4:   30:TEST(methods_tests, insert_test_4) {
        1:   31:  HashTable a = HashTable();
        1:   32:  int number = a.getCapacity();
        -:   33:
       11:   34:  for (int i = 0; i < number; i++) {
       10:   35:    HashNode node = HashNode(std::to_string(i), {2, 2});
       10:   36:    a.insert(node.key, node.value);
       10:   37:  }
       1*:   38:  EXPECT_EQ(number, a.getSize()) << "size wasn't increased!!";
        1:   39:}
------------------
_ZN32methods_tests_insert_test_4_TestC2Ev:
function _ZN32methods_tests_insert_test_4_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   30:TEST(methods_tests, insert_test_4) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_4_TestD0Ev:
function _ZN32methods_tests_insert_test_4_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   30:TEST(methods_tests, insert_test_4) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN32methods_tests_insert_test_4_TestD2Ev:
function _ZN32methods_tests_insert_test_4_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   30:TEST(methods_tests, insert_test_4) {
call    0 returned 100%
------------------
_ZN32methods_tests_insert_test_4_Test8TestBodyEv:
function _ZN32methods_tests_insert_test_4_Test8TestBodyEv called 1 returned 100% blocks executed 41%
        1:   30:TEST(methods_tests, insert_test_4) {
        1:   31:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   32:  int number = a.getCapacity();
call    0 returned 100%
        -:   33:
       11:   34:  for (int i = 0; i < number; i++) {
branch  0 taken 91%
branch  1 taken 9% (fallthrough)
       10:   35:    HashNode node = HashNode(std::to_string(i), {2, 2});
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
       10:   36:    a.insert(node.key, node.value);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       10:   37:  }
call    0 returned 100%
call    1 never executed
       1*:   38:  EXPECT_EQ(number, a.getSize()) << "size wasn't increased!!";
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
call   20 never executed
call   21 never executed
call   22 returned 100%
call   23 never executed
call   24 never executed
call   25 never executed
        1:   39:}
call    0 returned 100%
call    1 never executed
------------------
        -:   40:
        4:   41:TEST(methods_tests, rehashing_test_1) {
        1:   42:  HashTable a = HashTable(4);
        2:   43:  a.insert("Key", {1, 1});
        2:   44:  a.insert("Key1", {1, 2});
        2:   45:  a.insert("Key2", {5, 1});
        2:   46:  a.insert("Key3", {1, 9});
       1*:   47:  EXPECT_EQ(8, a.getCapacity());
        1:   48:}
------------------
_ZN35methods_tests_rehashing_test_1_TestC2Ev:
function _ZN35methods_tests_rehashing_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   41:TEST(methods_tests, rehashing_test_1) {
call    0 returned 100%
------------------
_ZN35methods_tests_rehashing_test_1_TestD0Ev:
function _ZN35methods_tests_rehashing_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   41:TEST(methods_tests, rehashing_test_1) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN35methods_tests_rehashing_test_1_TestD2Ev:
function _ZN35methods_tests_rehashing_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   41:TEST(methods_tests, rehashing_test_1) {
call    0 returned 100%
------------------
_ZN35methods_tests_rehashing_test_1_Test8TestBodyEv:
function _ZN35methods_tests_rehashing_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 41%
        1:   41:TEST(methods_tests, rehashing_test_1) {
        1:   42:  HashTable a = HashTable(4);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:   43:  a.insert("Key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:   44:  a.insert("Key1", {1, 2});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:   45:  a.insert("Key2", {5, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:   46:  a.insert("Key3", {1, 9});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
       1*:   47:  EXPECT_EQ(8, a.getCapacity());
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
call   19 returned 100%
call   20 never executed
call   21 never executed
call   22 never executed
        1:   48:}
call    0 returned 100%
call    1 never executed
------------------
        -:   49:
        4:   50:TEST(methods_tests, erase_test_1) {
        1:   51:  HashTable a = HashTable(3);
        3:   52:  a.insert("Key", {1, 1});
       2*:   53:  EXPECT_TRUE(a.erase("Key"));
        1:   54:}
------------------
_ZN31methods_tests_erase_test_1_TestC2Ev:
function _ZN31methods_tests_erase_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   50:TEST(methods_tests, erase_test_1) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_1_TestD0Ev:
function _ZN31methods_tests_erase_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   50:TEST(methods_tests, erase_test_1) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_erase_test_1_TestD2Ev:
function _ZN31methods_tests_erase_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   50:TEST(methods_tests, erase_test_1) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_1_Test8TestBodyEv:
function _ZN31methods_tests_erase_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 35%
        1:   50:TEST(methods_tests, erase_test_1) {
        1:   51:  HashTable a = HashTable(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        3:   52:  a.insert("Key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
       2*:   53:  EXPECT_TRUE(a.erase("Key"));
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
call   24 never executed
call   25 never executed
call   26 never executed
call   27 returned 100%
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
        1:   54:}
call    0 returned 100%
call    1 never executed
------------------
        -:   55:
        4:   56:TEST(methods_tests, erase_test_2) {
        1:   57:  HashTable a = HashTable(3);
        3:   58:  a.insert("Key", {1, 1});
        1:   59:  a.erase("Key");
       1*:   60:  EXPECT_EQ(0, a.getSize());
        1:   61:}
------------------
_ZN31methods_tests_erase_test_2_TestC2Ev:
function _ZN31methods_tests_erase_test_2_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   56:TEST(methods_tests, erase_test_2) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_2_TestD0Ev:
function _ZN31methods_tests_erase_test_2_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   56:TEST(methods_tests, erase_test_2) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_erase_test_2_TestD2Ev:
function _ZN31methods_tests_erase_test_2_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   56:TEST(methods_tests, erase_test_2) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_2_Test8TestBodyEv:
function _ZN31methods_tests_erase_test_2_Test8TestBodyEv called 1 returned 100% blocks executed 39%
        1:   56:TEST(methods_tests, erase_test_2) {
        1:   57:  HashTable a = HashTable(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        3:   58:  a.insert("Key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        1:   59:  a.erase("Key");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
       1*:   60:  EXPECT_EQ(0, a.getSize());
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
call   19 returned 100%
call   20 never executed
call   21 never executed
call   22 never executed
        1:   61:}
call    0 returned 100%
call    1 never executed
------------------
        -:   62:
        4:   63:TEST(methods_tests, erase_test_3) {
        1:   64:  HashTable a = HashTable(3);
        3:   65:  a.insert("Key", {1, 1});
        2:   66:  a.erase("Key");
       2*:   67:  EXPECT_FALSE(a.contains("Key"));
        1:   68:}
------------------
_ZN31methods_tests_erase_test_3_TestC2Ev:
function _ZN31methods_tests_erase_test_3_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST(methods_tests, erase_test_3) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_3_TestD0Ev:
function _ZN31methods_tests_erase_test_3_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST(methods_tests, erase_test_3) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_erase_test_3_TestD2Ev:
function _ZN31methods_tests_erase_test_3_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   63:TEST(methods_tests, erase_test_3) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_3_Test8TestBodyEv:
function _ZN31methods_tests_erase_test_3_Test8TestBodyEv called 1 returned 100% blocks executed 38%
        1:   63:TEST(methods_tests, erase_test_3) {
        1:   64:  HashTable a = HashTable(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        3:   65:  a.insert("Key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:   66:  a.erase("Key");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
       2*:   67:  EXPECT_FALSE(a.contains("Key"));
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
call   24 never executed
call   25 never executed
call   26 never executed
call   27 returned 100%
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
        1:   68:}
call    0 returned 100%
call    1 never executed
------------------
        -:   69:
        4:   70:TEST(methods_tests, erase_test_4) {
        1:   71:  HashTable a = HashTable(3);
        3:   72:  a.insert("Key", {1, 1});
       2*:   73:  EXPECT_FALSE(a.erase("Yek"));
        1:   74:}
------------------
_ZN31methods_tests_erase_test_4_TestC2Ev:
function _ZN31methods_tests_erase_test_4_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   70:TEST(methods_tests, erase_test_4) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_4_TestD0Ev:
function _ZN31methods_tests_erase_test_4_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   70:TEST(methods_tests, erase_test_4) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_erase_test_4_TestD2Ev:
function _ZN31methods_tests_erase_test_4_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   70:TEST(methods_tests, erase_test_4) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_4_Test8TestBodyEv:
function _ZN31methods_tests_erase_test_4_Test8TestBodyEv called 1 returned 100% blocks executed 35%
        1:   70:TEST(methods_tests, erase_test_4) {
        1:   71:  HashTable a = HashTable(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        3:   72:  a.insert("Key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
       2*:   73:  EXPECT_FALSE(a.erase("Yek"));
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
call   24 never executed
call   25 never executed
call   26 never executed
call   27 returned 100%
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
        1:   74:}
call    0 returned 100%
call    1 never executed
------------------
        -:   75:
        4:   76:TEST(methods_tests, erase_test_5) {
        1:   77:  HashTable a = HashTable(3);
        3:   78:  a.insert("Key", {1, 1});
        2:   79:  a.erase("Key");
       2*:   80:  EXPECT_FALSE(a.erase("Key"));
        1:   81:}
------------------
_ZN31methods_tests_erase_test_5_TestC2Ev:
function _ZN31methods_tests_erase_test_5_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   76:TEST(methods_tests, erase_test_5) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_5_TestD0Ev:
function _ZN31methods_tests_erase_test_5_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   76:TEST(methods_tests, erase_test_5) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_erase_test_5_TestD2Ev:
function _ZN31methods_tests_erase_test_5_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   76:TEST(methods_tests, erase_test_5) {
call    0 returned 100%
------------------
_ZN31methods_tests_erase_test_5_Test8TestBodyEv:
function _ZN31methods_tests_erase_test_5_Test8TestBodyEv called 1 returned 100% blocks executed 38%
        1:   76:TEST(methods_tests, erase_test_5) {
        1:   77:  HashTable a = HashTable(3);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        3:   78:  a.insert("Key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:   79:  a.erase("Key");
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
       2*:   80:  EXPECT_FALSE(a.erase("Key"));
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
call   24 never executed
call   25 never executed
call   26 never executed
call   27 returned 100%
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
        1:   81:}
call    0 returned 100%
call    1 never executed
------------------
        -:   82:
        4:   83:TEST(methods_tests, linear_probing_test_1) {
        1:   84:  HashTable a = HashTable();
        1:   85:  Key key = "testKey";
        1:   86:  int result = a.linearProbing(0, key);
       1*:   87:  EXPECT_EQ(0, result);
        1:   88:}
------------------
_ZN40methods_tests_linear_probing_test_1_TestC2Ev:
function _ZN40methods_tests_linear_probing_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   83:TEST(methods_tests, linear_probing_test_1) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_1_TestD0Ev:
function _ZN40methods_tests_linear_probing_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   83:TEST(methods_tests, linear_probing_test_1) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_1_TestD2Ev:
function _ZN40methods_tests_linear_probing_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   83:TEST(methods_tests, linear_probing_test_1) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_1_Test8TestBodyEv:
function _ZN40methods_tests_linear_probing_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 39%
        1:   83:TEST(methods_tests, linear_probing_test_1) {
        1:   84:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   85:  Key key = "testKey";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   86:  int result = a.linearProbing(0, key);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
       1*:   87:  EXPECT_EQ(0, result);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
call   16 never executed
call   17 never executed
call   18 returned 100%
call   19 never executed
call   20 never executed
call   21 never executed
        1:   88:}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 never executed
------------------
        -:   89:
        4:   90:TEST(methods_tests, linear_probing_test_2) {
        1:   91:  HashTable a = HashTable();
        1:   92:  Key key = "testKey";
        1:   93:  Value value = {1, 1};
        1:   94:  a.insert(key, value);
        -:   95:
        1:   96:  int startIndex = a.find(key);
        1:   97:  int result = a.linearProbing(startIndex, key);
       1*:   98:  EXPECT_EQ(result, startIndex);
        1:   99:}
------------------
_ZN40methods_tests_linear_probing_test_2_TestC2Ev:
function _ZN40methods_tests_linear_probing_test_2_TestC2Ev called 1 returned 100% blocks executed 100%
        1:   90:TEST(methods_tests, linear_probing_test_2) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_2_TestD0Ev:
function _ZN40methods_tests_linear_probing_test_2_TestD0Ev called 1 returned 100% blocks executed 100%
        1:   90:TEST(methods_tests, linear_probing_test_2) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_2_TestD2Ev:
function _ZN40methods_tests_linear_probing_test_2_TestD2Ev called 1 returned 100% blocks executed 100%
        1:   90:TEST(methods_tests, linear_probing_test_2) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_2_Test8TestBodyEv:
function _ZN40methods_tests_linear_probing_test_2_Test8TestBodyEv called 1 returned 100% blocks executed 43%
        1:   90:TEST(methods_tests, linear_probing_test_2) {
        1:   91:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   92:  Key key = "testKey";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:   93:  Value value = {1, 1};
        1:   94:  a.insert(key, value);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:   95:
        1:   96:  int startIndex = a.find(key);
call    0 returned 100%
        1:   97:  int result = a.linearProbing(startIndex, key);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
       1*:   98:  EXPECT_EQ(result, startIndex);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
call   16 never executed
call   17 never executed
call   18 returned 100%
call   19 never executed
call   20 never executed
call   21 never executed
        1:   99:}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 never executed
------------------
        -:  100:
        4:  101:TEST(methods_tests, linear_probing_test_3) {
        1:  102:  HashTable a = HashTable();
        -:  103:
        1:  104:  Key key1 = "testKey1";
        1:  105:  Value value1 = {1, 1};
        1:  106:  Key key2 = "testKey2";
        1:  107:  Value value2 = {2, 2};
        -:  108:
        1:  109:  a.insert(key1, value1);
        1:  110:  a.insert(key2, value2);
        -:  111:
        1:  112:  int startIndex = a.find(key1);
        1:  113:  int result = a.linearProbing(startIndex, key2);
       1*:  114:  EXPECT_NE(result, startIndex);
        1:  115:}
------------------
_ZN40methods_tests_linear_probing_test_3_TestC2Ev:
function _ZN40methods_tests_linear_probing_test_3_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  101:TEST(methods_tests, linear_probing_test_3) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_3_TestD0Ev:
function _ZN40methods_tests_linear_probing_test_3_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  101:TEST(methods_tests, linear_probing_test_3) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_3_TestD2Ev:
function _ZN40methods_tests_linear_probing_test_3_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  101:TEST(methods_tests, linear_probing_test_3) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_3_Test8TestBodyEv:
function _ZN40methods_tests_linear_probing_test_3_Test8TestBodyEv called 1 returned 100% blocks executed 45%
        1:  101:TEST(methods_tests, linear_probing_test_3) {
        1:  102:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  103:
        1:  104:  Key key1 = "testKey1";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  105:  Value value1 = {1, 1};
        1:  106:  Key key2 = "testKey2";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  107:  Value value2 = {2, 2};
        -:  108:
        1:  109:  a.insert(key1, value1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  110:  a.insert(key2, value2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  111:
        1:  112:  int startIndex = a.find(key1);
call    0 returned 100%
        1:  113:  int result = a.linearProbing(startIndex, key2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
       1*:  114:  EXPECT_NE(result, startIndex);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
call   16 never executed
call   17 never executed
call   18 returned 100%
call   19 never executed
call   20 never executed
call   21 never executed
        1:  115:}
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 never executed
call    4 never executed
call    5 never executed
------------------
        -:  116:
        4:  117:TEST(methods_tests, linear_probing_test_4) {
        1:  118:  HashTable a = HashTable();
       21:  119:  for (int i = 0; i < a.getCapacity(); i++) {
       20:  120:    Key key = "key" + std::to_string(i);
       20:  121:    Value value = {1, 1};
       20:  122:    a.insert(key, value);
       20:  123:  }
        -:  124:
        -:  125:  // Now the table is full, so probing should not find a suitable index
        1:  126:  Key newKey = "newKey";
        1:  127:  int startIndex = 0;
        1:  128:  int result = a.linearProbing(startIndex, newKey);
       1*:  129:  EXPECT_EQ(result, -1);
        1:  130:}
------------------
_ZN40methods_tests_linear_probing_test_4_TestC2Ev:
function _ZN40methods_tests_linear_probing_test_4_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  117:TEST(methods_tests, linear_probing_test_4) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_4_TestD0Ev:
function _ZN40methods_tests_linear_probing_test_4_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  117:TEST(methods_tests, linear_probing_test_4) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_4_TestD2Ev:
function _ZN40methods_tests_linear_probing_test_4_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  117:TEST(methods_tests, linear_probing_test_4) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_4_Test8TestBodyEv:
function _ZN40methods_tests_linear_probing_test_4_Test8TestBodyEv called 1 returned 100% blocks executed 45%
        1:  117:TEST(methods_tests, linear_probing_test_4) {
        1:  118:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       21:  119:  for (int i = 0; i < a.getCapacity(); i++) {
call    0 returned 100%
branch  1 taken 95%
branch  2 taken 5% (fallthrough)
       20:  120:    Key key = "key" + std::to_string(i);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
       20:  121:    Value value = {1, 1};
       20:  122:    a.insert(key, value);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
       20:  123:  }
call    0 returned 100%
call    1 never executed
        -:  124:
        -:  125:  // Now the table is full, so probing should not find a suitable index
        1:  126:  Key newKey = "newKey";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  127:  int startIndex = 0;
        1:  128:  int result = a.linearProbing(startIndex, newKey);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
       1*:  129:  EXPECT_EQ(result, -1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
call   16 never executed
call   17 never executed
call   18 returned 100%
call   19 never executed
call   20 never executed
call   21 never executed
        1:  130:}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 never executed
------------------
        -:  131:
        4:  132:TEST(methods_tests, linear_probing_test_5) {
        1:  133:  HashTable a = HashTable();
        -:  134:
        2:  135:  Key key1 = "key1";
        2:  136:  Key key2 = "key2";
        1:  137:  Key key3 = "key3";
        -:  138:
        1:  139:  a.insert(key1, {1, 1});
        1:  140:  a.insert(key2, {1, 1});
        1:  141:  a.insert(key3, {1, 1});
        -:  142:
        -:  143:  // Assuming a collision occurs, we want to find the next available slot
        1:  144:  int startIndex = a.find(key1);
        1:  145:  int result = a.linearProbing(startIndex, key2);
       1*:  146:  EXPECT_NE(result, startIndex);
        1:  147:}
------------------
_ZN40methods_tests_linear_probing_test_5_TestC2Ev:
function _ZN40methods_tests_linear_probing_test_5_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  132:TEST(methods_tests, linear_probing_test_5) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_5_TestD0Ev:
function _ZN40methods_tests_linear_probing_test_5_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  132:TEST(methods_tests, linear_probing_test_5) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_5_TestD2Ev:
function _ZN40methods_tests_linear_probing_test_5_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  132:TEST(methods_tests, linear_probing_test_5) {
call    0 returned 100%
------------------
_ZN40methods_tests_linear_probing_test_5_Test8TestBodyEv:
function _ZN40methods_tests_linear_probing_test_5_Test8TestBodyEv called 1 returned 100% blocks executed 45%
        1:  132:TEST(methods_tests, linear_probing_test_5) {
        1:  133:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  134:
        2:  135:  Key key1 = "key1";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  136:  Key key2 = "key2";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  137:  Key key3 = "key3";
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  138:
        1:  139:  a.insert(key1, {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  140:  a.insert(key2, {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  141:  a.insert(key3, {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        -:  142:
        -:  143:  // Assuming a collision occurs, we want to find the next available slot
        1:  144:  int startIndex = a.find(key1);
call    0 returned 100%
        1:  145:  int result = a.linearProbing(startIndex, key2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
call    4 returned 100%
       1*:  146:  EXPECT_NE(result, startIndex);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 never executed
branch  7 never executed (fallthrough)
branch  8 never executed (throw)
call    9 never executed
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
call   16 never executed
call   17 never executed
call   18 returned 100%
call   19 never executed
call   20 never executed
call   21 never executed
        1:  147:}
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
------------------
        -:  148:
        4:  149:TEST(methods_tests, clear_test_1) {
        1:  150:  HashTable a = HashTable();
        2:  151:  a.insert("key", {1, 1});
        2:  152:  a.insert("Key2", {2, 2});
        -:  153:
       1*:  154:  EXPECT_EQ(a.getSize(), 2);
        -:  155:
        1:  156:  a.clear();
        -:  157:
       1*:  158:  EXPECT_EQ(a.getSize(), 0);
        1:  159:}
------------------
_ZN31methods_tests_clear_test_1_TestC2Ev:
function _ZN31methods_tests_clear_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  149:TEST(methods_tests, clear_test_1) {
call    0 returned 100%
------------------
_ZN31methods_tests_clear_test_1_TestD0Ev:
function _ZN31methods_tests_clear_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  149:TEST(methods_tests, clear_test_1) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_clear_test_1_TestD2Ev:
function _ZN31methods_tests_clear_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  149:TEST(methods_tests, clear_test_1) {
call    0 returned 100%
------------------
_ZN31methods_tests_clear_test_1_Test8TestBodyEv:
function _ZN31methods_tests_clear_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 34%
        1:  149:TEST(methods_tests, clear_test_1) {
        1:  150:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        2:  151:  a.insert("key", {1, 1});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:  152:  a.insert("Key2", {2, 2});
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        -:  153:
       1*:  154:  EXPECT_EQ(a.getSize(), 2);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
call   19 returned 100%
call   20 never executed
call   21 never executed
call   22 never executed
        -:  155:
        1:  156:  a.clear();
call    0 returned 100%
        -:  157:
       1*:  158:  EXPECT_EQ(a.getSize(), 0);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
call   19 returned 100%
call   20 never executed
call   21 never executed
call   22 never executed
        1:  159:}
call    0 returned 100%
call    1 never executed
------------------
        -:  160:
        4:  161:TEST(methods_tests, clear_test_2) {
        1:  162:  HashTable a = HashTable(1);
        1:  163:  a.clear();
        -:  164:
       1*:  165:  EXPECT_NO_THROW({ a.clear(); });
        1:  166:}
------------------
_ZN31methods_tests_clear_test_2_TestC2Ev:
function _ZN31methods_tests_clear_test_2_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  161:TEST(methods_tests, clear_test_2) {
call    0 returned 100%
------------------
_ZN31methods_tests_clear_test_2_TestD0Ev:
function _ZN31methods_tests_clear_test_2_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  161:TEST(methods_tests, clear_test_2) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN31methods_tests_clear_test_2_TestD2Ev:
function _ZN31methods_tests_clear_test_2_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  161:TEST(methods_tests, clear_test_2) {
call    0 returned 100%
------------------
_ZN31methods_tests_clear_test_2_Test8TestBodyEv:
function _ZN31methods_tests_clear_test_2_Test8TestBodyEv called 1 returned 100% blocks executed 21%
        1:  161:TEST(methods_tests, clear_test_2) {
        1:  162:  HashTable a = HashTable(1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  163:  a.clear();
call    0 returned 100%
        -:  164:
       1*:  165:  EXPECT_NO_THROW({ a.clear(); });
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
branch  7 taken 100% (fallthrough)
branch  8 taken 0%
call    9 returned 100%
call   10 never executed
branch 11 never executed (fallthrough)
branch 12 never executed (throw)
call   13 never executed
branch 14 never executed (fallthrough)
branch 15 never executed (throw)
call   16 never executed
call   17 never executed
branch 18 never executed (fallthrough)
branch 19 never executed (throw)
call   20 never executed
branch 21 never executed (fallthrough)
branch 22 never executed (throw)
call   23 never executed
call   24 never executed
call   25 never executed
call   26 returned 100%
branch 27 never executed
branch 28 never executed
call   29 never executed
call   30 never executed
branch 31 never executed (fallthrough)
branch 32 never executed (throw)
call   33 never executed
branch 34 never executed (fallthrough)
branch 35 never executed (throw)
call   36 never executed
branch 37 never executed (fallthrough)
branch 38 never executed (throw)
call   39 never executed
call   40 never executed
branch 41 never executed (fallthrough)
branch 42 never executed (throw)
call   43 never executed
call   44 never executed
branch 45 never executed (fallthrough)
branch 46 never executed (throw)
call   47 never executed
branch 48 never executed (fallthrough)
branch 49 never executed (throw)
call   50 never executed
call   51 never executed
call   52 never executed
branch 53 never executed (fallthrough)
branch 54 never executed (throw)
call   55 never executed
branch 56 never executed (fallthrough)
branch 57 never executed (throw)
call   58 never executed
call   59 never executed
call   60 never executed
call   61 never executed
call   62 never executed
call   63 never executed
call   64 never executed
        1:  166:}
call    0 returned 100%
call    1 never executed
------------------
        -:  167:
        4:  168:TEST(methods_tests, at_test_1) {
        1:  169:  HashTable a = HashTable();
        1:  170:  const Value value1 = {1, 1};
        1:  171:  const Value value2 = {2, 2};
        -:  172:
        2:  173:  a.insert("1", value1);
        2:  174:  a.insert("2", value2);
        -:  175:
       2*:  176:  EXPECT_TRUE(a.at("1") == value1);
       2*:  177:  EXPECT_TRUE(a.at("2") == value2);
        1:  178:}
------------------
_ZN28methods_tests_at_test_1_TestC2Ev:
function _ZN28methods_tests_at_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  168:TEST(methods_tests, at_test_1) {
call    0 returned 100%
------------------
_ZN28methods_tests_at_test_1_TestD0Ev:
function _ZN28methods_tests_at_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  168:TEST(methods_tests, at_test_1) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN28methods_tests_at_test_1_TestD2Ev:
function _ZN28methods_tests_at_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  168:TEST(methods_tests, at_test_1) {
call    0 returned 100%
------------------
_ZN28methods_tests_at_test_1_Test8TestBodyEv:
function _ZN28methods_tests_at_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 35%
        1:  168:TEST(methods_tests, at_test_1) {
        1:  169:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  170:  const Value value1 = {1, 1};
        1:  171:  const Value value2 = {2, 2};
        -:  172:
        2:  173:  a.insert("1", value1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        2:  174:  a.insert("2", value2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        -:  175:
       2*:  176:  EXPECT_TRUE(a.at("1") == value1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
call   18 never executed
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
       2*:  177:  EXPECT_TRUE(a.at("2") == value2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 never executed
branch 13 never executed (fallthrough)
branch 14 never executed (throw)
call   15 never executed
branch 16 never executed (fallthrough)
branch 17 never executed (throw)
call   18 never executed
call   19 never executed
branch 20 never executed (fallthrough)
branch 21 never executed (throw)
call   22 never executed
branch 23 never executed (fallthrough)
branch 24 never executed (throw)
call   25 never executed
call   26 never executed
call   27 never executed
call   28 returned 100%
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
        1:  178:}
call    0 returned 100%
call    1 never executed
------------------
        -:  179:
        4:  180:TEST(methods_tests, at_test_2) {
        1:  181:  HashTable a = HashTable();
        1:  182:  const Value value1 = {1, 1};
        -:  183:
        1:  184:  a.insert("1", value1);
        -:  185:
       3*:  186:  EXPECT_THROW(a.at("2"), std::runtime_error);
        1:  187:}
------------------
_ZN28methods_tests_at_test_2_TestC2Ev:
function _ZN28methods_tests_at_test_2_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  180:TEST(methods_tests, at_test_2) {
call    0 returned 100%
------------------
_ZN28methods_tests_at_test_2_TestD0Ev:
function _ZN28methods_tests_at_test_2_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  180:TEST(methods_tests, at_test_2) {
call    0 returned 100%
call    1 returned 100%
------------------
_ZN28methods_tests_at_test_2_TestD2Ev:
function _ZN28methods_tests_at_test_2_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  180:TEST(methods_tests, at_test_2) {
call    0 returned 100%
------------------
_ZN28methods_tests_at_test_2_Test8TestBodyEv:
function _ZN28methods_tests_at_test_2_Test8TestBodyEv called 1 returned 100% blocks executed 37%
        1:  180:TEST(methods_tests, at_test_2) {
        1:  181:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  182:  const Value value1 = {1, 1};
        -:  183:
        1:  184:  a.insert("1", value1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        -:  185:
       3*:  186:  EXPECT_THROW(a.at("2"), std::runtime_error);
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
call    4 returned 100%
branch  5 taken 100% (fallthrough)
branch  6 taken 0% (throw)
branch  7 taken 100% (fallthrough)
branch  8 taken 0%
call    9 returned 100%
branch 10 taken 100% (fallthrough)
branch 11 taken 0% (throw)
call   12 returned 100%
branch 13 taken 0% (fallthrough)
branch 14 taken 100% (throw)
call   15 never executed
branch 16 taken 0% (fallthrough)
branch 17 taken 100%
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
call   24 never executed
call   25 never executed
branch 26 never executed (fallthrough)
branch 27 never executed (throw)
call   28 never executed
branch 29 never executed (fallthrough)
branch 30 never executed (throw)
call   31 never executed
call   32 never executed
call   33 returned 100%
call   34 returned 100%
branch 35 taken 100%
branch 36 taken 0%
branch 37 taken 0%
call   38 returned 100%
call   39 returned 100%
call   40 never executed
call   41 never executed
branch 42 never executed (fallthrough)
branch 43 never executed (throw)
call   44 never executed
branch 45 never executed (fallthrough)
branch 46 never executed (throw)
call   47 never executed
branch 48 never executed (fallthrough)
branch 49 never executed (throw)
call   50 never executed
call   51 never executed
branch 52 never executed (fallthrough)
branch 53 never executed (throw)
call   54 never executed
call   55 never executed
branch 56 never executed (fallthrough)
branch 57 never executed (throw)
call   58 never executed
branch 59 never executed (fallthrough)
branch 60 never executed (throw)
call   61 never executed
call   62 never executed
call   63 never executed
branch 64 never executed (fallthrough)
branch 65 never executed (throw)
call   66 never executed
branch 67 never executed (fallthrough)
branch 68 never executed (throw)
call   69 never executed
call   70 never executed
call   71 never executed
call   72 never executed
call   73 never executed
call   74 never executed
        1:  187:}
call    0 returned 100%
call    1 never executed
------------------
        -:  188:
        4:  189:TEST(methods_tests, swap_test_1){
        1:  190:  HashTable a = HashTable();
        1:  191:  const Value value1 = {1, 1};
        1:  192:  a.insert("1", value1);
        1:  193:  HashTable b = HashTable();
        1:  194:  const Value value2 = {2,2};
        2:  195:  b.insert("2", value2);
        1:  196:  b.insert("3", value2);
        -:  197:
        1:  198:  a.swap(b);
       1*:  199:  EXPECT_EQ(2, a.getSize());
       1*:  200:  EXPECT_EQ(1, b.getSize());
       2*:  201:  EXPECT_FALSE(a.contains("1"));
        1:  202:}
------------------
_ZN30methods_tests_swap_test_1_TestC2Ev:
function _ZN30methods_tests_swap_test_1_TestC2Ev called 1 returned 100% blocks executed 100%
        1:  189:TEST(methods_tests, swap_test_1){
call    0 returned 100%
------------------
_ZN30methods_tests_swap_test_1_TestD0Ev:
function _ZN30methods_tests_swap_test_1_TestD0Ev called 1 returned 100% blocks executed 100%
        1:  189:TEST(methods_tests, swap_test_1){
call    0 returned 100%
call    1 returned 100%
------------------
_ZN30methods_tests_swap_test_1_TestD2Ev:
function _ZN30methods_tests_swap_test_1_TestD2Ev called 1 returned 100% blocks executed 100%
        1:  189:TEST(methods_tests, swap_test_1){
call    0 returned 100%
------------------
_ZN30methods_tests_swap_test_1_Test8TestBodyEv:
function _ZN30methods_tests_swap_test_1_Test8TestBodyEv called 1 returned 100% blocks executed 34%
        1:  189:TEST(methods_tests, swap_test_1){
        1:  190:  HashTable a = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  191:  const Value value1 = {1, 1};
        1:  192:  a.insert("1", value1);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        1:  193:  HashTable b = HashTable();
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
        1:  194:  const Value value2 = {2,2};
        2:  195:  b.insert("2", value2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        1:  196:  b.insert("3", value2);
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
        -:  197:
        1:  198:  a.swap(b);
call    0 returned 100%
       1*:  199:  EXPECT_EQ(2, a.getSize());
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
call   19 returned 100%
call   20 never executed
call   21 never executed
call   22 never executed
       1*:  200:  EXPECT_EQ(1, b.getSize());
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
branch  5 taken 0% (fallthrough)
branch  6 taken 100%
call    7 never executed
branch  8 never executed (fallthrough)
branch  9 never executed (throw)
call   10 never executed
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
call   19 returned 100%
call   20 never executed
call   21 never executed
call   22 never executed
       2*:  201:  EXPECT_FALSE(a.contains("1"));
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0% (throw)
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 returned 100%
call    8 returned 100%
branch  9 taken 0% (fallthrough)
branch 10 taken 100%
call   11 never executed
branch 12 never executed (fallthrough)
branch 13 never executed (throw)
call   14 never executed
branch 15 never executed (fallthrough)
branch 16 never executed (throw)
call   17 never executed
call   18 never executed
branch 19 never executed (fallthrough)
branch 20 never executed (throw)
call   21 never executed
branch 22 never executed (fallthrough)
branch 23 never executed (throw)
call   24 never executed
call   25 never executed
call   26 never executed
call   27 returned 100%
call   28 never executed
call   29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
        1:  202:}
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 never executed
------------------
